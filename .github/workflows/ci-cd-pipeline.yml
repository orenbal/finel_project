name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Generate Version Tag
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          VERSION="1.0.${COMMIT_COUNT}"
          echo "Generated version: $VERSION"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch --tags
          while git rev-parse "refs/tags/$VERSION" >/dev/null 2>&1; do
            COMMIT_COUNT=$((COMMIT_COUNT + 1))
            VERSION="1.0.${COMMIT_COUNT}"
          done
          git tag $VERSION
          git push origin $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

    outputs:
      version: ${{ steps.tag.outputs.version }}

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest ./tests  

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > /tmp/gcp-key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp-key.json
          gcloud config set project devops-451510

      - name: Install Helm
        run: |
          curl https://get.helm.sh/helm-v3.10.3-linux-amd64.tar.gz -o helm.tar.gz
          tar -zxvf helm.tar.gz
          sudo mv linux-amd64/helm /usr/local/bin/
          helm version

      - name: Install Terraform
        run: |
          wget https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip
          unzip terraform_1.7.5_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Get GKE cluster credentials
        run: |
          gcloud container clusters get-credentials flask-cluster \
            --zone us-central1-a --project devops-451510
          kubectl config current-context
          kubectl config view

      - name: Build and Push Docker Image
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/devops-451510/my-docker-repo/project-flask-app:$VERSION"
          docker build -t $IMAGE_NAME --build-arg VERSION=$VERSION .
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
          docker push $IMAGE_NAME

      - name: Deploy to Kubernetes with Helm
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          IMAGE_NAME="us-central1-docker.pkg.dev/devops-451510/my-docker-repo/project-flask-app:$VERSION"
          helm upgrade --install flask-app-release ./helm/flask-app --namespace default --set image.tag=$VERSION
          kubectl get pods -o wide
