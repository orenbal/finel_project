name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # שלב 1: בדיקות CI
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest --junitxml=test-results.xml

  # שלב 2: בנייה ודחיפה ל-DockerHub
  docker-build-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/finel_project-web:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/finel_project-web:latest

  # שלב 3: פריסה ל-Kubernetes עם Helm
  deploy:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3

      - name: Set Kubernetes Context
        run: echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig && export KUBECONFIG=kubeconfig

      - name: Deploy with Helm
        run: |
          helm upgrade --install finel-project ./helm-chart \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/finel_project-web \
            --set image.tag=latest
