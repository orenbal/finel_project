name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          pytest ./tests  

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/finel_project-web:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/finel_project-web:latest

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies (Fix Missing Packages)
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack

          # Install cri-tools
          CRI_TOOLS_VERSION="1.28.0"
          curl -LO https://github.com/kubernetes-sigs/cri-tools/releases/download/v$CRI_TOOLS_VERSION/crictl-v$CRI_TOOLS_VERSION-linux-amd64.tar.gz
          sudo tar -C /usr/local/bin -xzf crictl-v$CRI_TOOLS_VERSION-linux-amd64.tar.gz
          rm crictl-v$CRI_TOOLS_VERSION-linux-amd64.tar.gz
          crictl --version

          # Install containernetworking-plugins
          CNI_VERSION="1.3.0"
          sudo mkdir -p /opt/cni/bin
          curl -LO https://github.com/containernetworking/plugins/releases/download/v$CNI_VERSION/cni-plugins-linux-amd64-v$CNI_VERSION.tgz
          sudo tar -C /opt/cni/bin -xzf cni-plugins-linux-amd64-v$CNI_VERSION.tgz
          rm cni-plugins-linux-amd64-v$CNI_VERSION.tgz
          ls -lah /opt/cni/bin

          # Install cri-dockerd
          CRI_DOCKERD_VERSION="0.3.8"
          curl -LO https://github.com/Mirantis/cri-dockerd/releases/download/v$CRI_DOCKERD_VERSION/cri-dockerd-${CRI_DOCKERD_VERSION}.amd64.tgz
          sudo tar -C /usr/local/bin -xzf cri-dockerd-${CRI_DOCKERD_VERSION}.amd64.tgz
          rm cri-dockerd-${CRI_DOCKERD_VERSION}.amd64.tgz
          
          # Move the binary correctly
          if [ -d "/usr/local/bin/cri-dockerd" ]; then
            sudo mv /usr/local/bin/cri-dockerd/cri-dockerd /usr/local/bin/
            sudo rm -rf /usr/local/bin/cri-dockerd
          fi

          sudo chmod +x /usr/local/bin/cri-dockerd

          # Create systemd service for cri-dockerd
          cat <<EOF | sudo tee /etc/systemd/system/cri-dockerd.service
          [Unit]
          Description=CRI Dockerd
          Documentation=https://github.com/Mirantis/cri-dockerd
          Wants=docker.service
          After=docker.service

          [Service]
          ExecStart=/usr/local/bin/cri-dockerd
          Restart=always
          RestartSec=5
          LimitNOFILE=infinity
          LimitNPROC=infinity
          TasksMax=infinity

          [Install]
          WantedBy=multi-user.target
          EOF

          # Enable and start the service
          sudo systemctl daemon-reload
          sudo systemctl enable cri-dockerd
          sudo systemctl start cri-dockerd
          sudo systemctl status cri-dockerd --no-pager || true

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: |
          sudo minikube start --driver=none --container-runtime=docker
          sudo nohup minikube tunnel > /dev/null 2>&1 &

      - name: Ensure Minikube is Running
        run: |
          minikube status || minikube start --driver=none --container-runtime=docker
          minikube addons enable default-storageclass
          minikube addons enable storage-provisioner

      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          minikube update-context
          export KUBECONFIG=$HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Verify Kubernetes Connection
        run: |
          minikube status
          kubectl config view
          kubectl cluster-info
          kubectl get nodes
          kubectl get pods -A

      - name: Deploy with Helm
        run: |
          helm upgrade --install finel-project ./helm-chart -f values.yaml
